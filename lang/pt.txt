## NAVBAR
navbar.item.1=Sobre mim
navbar.item.2=Projetos
navbar.item.3=Contato
navbar.item.4=Meu CV

## PROFILE
profile.h1=Olá!
profile.h2=sou 
profile.name=Julián Boetto
profile.h3=Desenvolvedor Full-Stack

## ABOUT ME
about.me=Sou da Argentina e atualmente trabalho e moro no Brasil. Me formei como desenvolvedor web full-stack e mudei de carreira na cidade do Rio de Janeiro. Tenho mais de 2 anos de experiência trabalhando nas áreas de Fintech, e-commerce e trading. Além da minha paixão por escrever código, também toco guitarra elétrica.
about.resume=Baixar CV

## PROJECTS

# project 1
project.name.1=Becapital S.A.
project.status.1=Actualmente
project.description.1=Empresa brasileira de investimentos e seguros.
project.card.1.description.btn.1=Mais detalhes
project.card.1.description.text.1=O primeiro trabalho que realizei consistiu em adaptar o front-end, back-end e banco de dados para começar a oferecer um novo produto que não havia sido considerado no momento em que o site foi planejado. Esse novo produto possuía novas regras de negócio e, para isso, foi necessário controlar todas as regras já implementadas. No processo, muitas refatorações foram realizadas, com o objetivo de deixar o código mais escalável. Outros trabalhos realizados incluíram a mudança de um serviço de criação de PDF para microserviço, a adição da criação de planilhas Excel, a melhoria do desempenho em consultas ao banco de dados, enviando informações previamente processadas no back-end, além da criação de testes unitários e documentação com Swagger, entre outras tarefas igualmente relevantes. Por fim, o último trabalho realizado foi a mudança novamente para um serviço em nuvem, mas com toda a documentação e testes, a mudança foi rápida e simples.
project.card.1.description.btn.2=Desafios
project.card.1.description.text.2=No primeiro trabalho que realizei, não tinha experiência trabalhando com ReactJS, até então só tinha trabalhado com Typescript no framework Angular. Tive que processar em pouco tempo um front-end em produção com Redux e muitas bibliotecas que nunca tinha utilizado. Para resolver isso, utilizei a ferramenta de inspeção no navegador e comecei a procurar padrões de código, palavras-chave, além da documentação oficial e muito material em inglês na web. Logo depois, já conseguia não só entregar as demandas dentro do prazo, como também melhorar o front-end. Outro desafio foi criar o primeiro microserviço, encontrando a melhor opção tanto nas tecnologias implementadas quanto no custo para mantê-lo disponível o tempo todo.
project.card.1.description.btn.3=Resultados
project.card.1.description.text.3=Hoje o site é completamente responsivo, escalável, com menos bibliotecas para manter, com versões atualizadas dos pacotes e, mais importante, tem documentação para as próximas pessoas desenvolvedoras.
project.card.1.description.btn.4=Tecnologias

# project 2
project.name.2=Que Buen Dato!
project.status.2=Finalizado
project.description.2=Um site para comprar e vender bens ou serviços locais.
project.card.2.description.btn.1=Mais detalhes
project.card.2.description.text.1=Meu primeiro trabalho como freelancer é no "Que Buen Dato!", um marketplace que conecta compradores e vendedores na região em que estão localizados. O site já possuía uma estrutura semelhante desenvolvida em Python com Django. Utilizei as estruturas originais e tudo o que achei interessante, mas criei um novo layout moderno e completamente responsivo para dispositivos móveis usando o NextJS. Atualmente, estou na primeira etapa, onde o front-end já possui as principais telas do perfil público. No back-end, estou utilizando o NestJS com Typescript e o MongoDB. A ideia é projetar o back-end para as próximas etapas, criando microserviços com cada nova implementação.
project.card.2.description.btn.2=Desafios
project.card.2.description.text.2=O principal desafio foi começar a ter tantas responsabilidades juntas. Como desenvolvedor que trabalhava para uma empresa, eu não precisava falar sempre com um cliente, as vezes tinhas outras pessoas fazendo isso, por exemplo. Agora estou vinculado diretamente ao cliente, e não só devo respeitar o planejamento e ser produtivo, mas também devo planejar e melhorar os processos por conta própria.
project.card.2.description.btn.3=Resultados
project.card.2.description.text.3=Como resultado, este projeto me ajuda muito a ter outra perspectiva, como líder, como gestor e como o principal responsável para que cada entrega seja melhor do que a anterior.
project.card.2.description.btn.4=Tecnologias

# project 3
project.name.3=Beholder bot
project.status.3=Atualmente
project.description.3=Bot multi-coin para fazer trading na Binance.
project.card.3.description.btn.1=Mais detalhes
project.card.3.description.text.1=O Beholder é um projeto pessoal desenvolvido no ano passado, baseado no projeto do Luiz Tools. Ele é um bot que automatiza processos na compra e venda de criptomoedas através da Binance Exchange. Por exemplo, ele possui mais de 60 indicadores técnicos que monitoram cada criptomoeda a cada segundo e podem comprar, vender ou enviar notificações via Telegram quando a condição é verdadeira. Além disso, possui várias funcionalidades automatizadas, como a estratégia Grid, Trailing stop ou agendamento de resgates. O projeto original foi criado com NodeJS e ReactJS, mas agora estou trabalhando com TDD no NestJS desde o início. Atualmente, possui documentação com Swagger e testes end-to-end.
project.card.3.description.btn.2=Desafios
project.card.3.description.text.2=O maior desafio foi me adaptar a trabalhar com TDD desde o início. Eu já tinha feito testes unitários e de integração com Jest e Supertest, mas se você começa o projeto pensando nos testes, as chances de erros no momento de editar trechos de código diminuem drasticamente. E a tranquilidade de ter um código, não importando quão grande ele seja, com cada função testada sendo ejecutada conforme o esperado, não tem palavras.
project.card.3.description.btn.3=Resultados
project.card.3.description.text.3=Atualmente, o bot possui funções prontas, documentadas e com testes end-to-end (Jest). Como se trata de um projeto pessoal, levará mais tempo do que se eu pudesse me dedicar em tempo integral. No entanto, ele é atualmente o meu principal hobby. Estou muito satisfeito com o resultado dos testes e da arquitetura do NestJS, tornando o bot facilmente mantido e escalável com novas funcionalidades, sem precisar se preocupar com as já existentes. Além disso, para os testes end-to-end, criei um ambiente teste com Docker para simular o cenário mais real possível de um CRUD completo para cada recurso com o banco de dados.
project.card.3.description.btn.4=Tecnologias

## CONTACT
contact.1=Quer entrar em contato comigo?
contact.2=Preencha o formulário e entre em contato o mais rápido possível.
contact.3=Você também pode me encontrar aqui:

## FORM (uppercase & ":")
form.name=NOME:
form.subject=ASSUNTO:
form.msg=MESSAGEM:
form.btn.send=ENVIAR